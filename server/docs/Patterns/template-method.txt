RESUMO ATUAL (2025-09-29) • Nota: 9/10
9/10:
- **BaseTemplate abstrata**: Define algoritmo imutável com hooks customizáveis (beforeProcess, afterValidation, onError, etc.).
- **Templates especializados**: UploadProcessTemplate, AuthenticationTemplate, DonationProcessTemplate, ReportTemplate com fluxos padronizados.
- **Hooks opcionais**: Subclasses podem sobrescrever hooks sem alterar algoritmo principal (validateFileIntegrity, preprocessFile, sendWelcomeEmail).
- **TemplateFactory**: Registro e criação centralizada de templates com injeção de dependências.
- **Fluxos estruturados**: Validar → Preparar → Processar → Finalizar com logs automáticos e tratamento de erros.
- **Especialização por herança**: LoginTemplate/RegisterTemplate, ImageUpload/DocumentUpload, SingleDonation/RecurringDonation.
- **Integração transparente**: DonationServiceWithTemplate mantém interface existente usando templates internamente.
Evidências no código:
- `src/application/templates/BaseTemplate.js` (algoritmo imutável, hooks, factory).
- `src/application/templates/UploadProcessTemplate.js` (validar→processar→salvar, hooks para pré-processamento).
- `src/application/templates/AuthenticationTemplate.js` (login/register com hooks de boas-vindas).
- `src/application/templates/DonationProcessTemplate.js` (single/recurring com hooks de notificação).
- `src/application/templates/ReportTemplate.js` (coletar→processar→formatar com agrupamento).
- `src/application/services/DonationServiceWithTemplate.js` (integração com service existente).

PADRÃO TEMPLATE METHOD (Comportamental)

CONTEXTO NO PROJETO:
- Geração de relatórios com estrutura comum mas conteúdo específico
- Processamento de uploads com etapas padronizadas
- Validação de dados com fluxo comum

APLICAÇÃO PRÁTICA:
1. ReportTemplate - estrutura base para relatórios de ONGs
2. UploadProcessTemplate - fluxo padrão de upload (validar, processar, salvar)
3. AuthenticationTemplate - fluxo de autenticação (validar, verificar, gerar token)
4. ValidationTemplate - estrutura comum de validação de entidades
5. EmailTemplate - template para diferentes tipos de email

BENEFÍCIOS:
- Reutilização de código comum
- Padronização de processos
- Facilita manutenção e extensão
