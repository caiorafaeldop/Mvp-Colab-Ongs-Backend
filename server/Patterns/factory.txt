PADRÃO FACTORY (Criacional)

CONTEXTO NO PROJETO:
- Criação de diferentes tipos de controllers, services e repositories
- Instanciação de objetos complexos com dependências
- Centralização da lógica de criação

APLICAÇÃO PRÁTICA:
1. AppFactory (já implementado) - cria rotas e controllers
2. RepositoryFactory - cria diferentes tipos de repositórios
3. ServiceFactory - instancia services com suas dependências
4. ControllerFactory - cria controllers com injeção de dependência
5. ValidatorFactory - cria validadores específicos por entidade

BENEFÍCIOS:
- Centraliza criação de objetos
- Facilita injeção de dependências
- Reduz acoplamento entre classes
