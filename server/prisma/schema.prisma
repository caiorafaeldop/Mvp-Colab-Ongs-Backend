// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model - Usuários do sistema (administradores das ONGs)
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   // Nome da ONG
  email     String   @unique
  password  String
  userType  String   @default("organization") // Sempre 'organization' agora
  phone     String?
  
  // Dados específicos da ONG
  description String?  // Descrição da ONG
  pixKey      String?  // Chave PIX para doações
  address     String?  // Endereço da ONG
  website     String?  // Site da ONG
  
  // Mercado Pago
  mercadoPagoAccessToken String? // Token de acesso do Mercado Pago
  mercadoPagoUserId      String? // ID do usuário no Mercado Pago
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos simplificados
  products  Product[]  @relation("UserProducts")
  donations Donation[] @relation("UserDonations")

  @@map("users")
}

// Product model - Produtos/Serviços oferecidos pelas organizações
model Product {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  description      String
  price            Float
  imageUrls        String[] // Array de URLs das imagens
  organizationId   String   @db.ObjectId
  organizationName String
  isAvailable      Boolean  @default(true)
  category         String?
  stock            Int      @default(1)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relacionamentos
  organization User @relation("UserProducts", fields: [organizationId], references: [id])

  @@map("products")
}

// Donation model - Doações via Mercado Pago
model Donation {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  organizationId    String   @db.ObjectId
  organizationName  String
  
  // Dados da doação
  amount            Float    // Valor da doação
  currency          String   @default("BRL")
  type              String   // 'single' ou 'recurring'
  frequency         String?  // 'monthly', 'weekly', 'yearly' (para recorrentes)
  
  // Dados do doador
  donorName         String?
  donorEmail        String?
  donorPhone        String?
  donorDocument     String?
  
  // Mercado Pago
  mercadoPagoId     String?  // ID da transação no Mercado Pago
  subscriptionId    String?  // ID da assinatura (para recorrentes)
  paymentStatus     String   @default("pending") // pending, approved, rejected, cancelled
  paymentMethod     String?  // credit_card, debit_card, pix, etc.
  
  // Metadados
  metadata          Json     @default("{}")
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relacionamentos
  organization User @relation("UserDonations", fields: [organizationId], references: [id])

  @@map("donations")
}
